import { describe, expect, it } from "vitest";
import { createCaller } from "../router";
import waitError from "../../lib/test/waitError";

describe("bottleReleaseById", function () {
    it("returns a bottle release", async function ({ fixtures }) {
        const caller = createCaller();

        const bottle = await fixtures.Bottle({
            name: "Test Bottle",
            category: "single_malt",
        });

        const release = await fixtures.BottleRelease({
            bottleId: bottle.id,
            abv: 40,
        });

        const result = await caller.bottleReleaseById(release.id);

        expect(result.id).toBe(release.id);
        expect(result.bottle.id).toBe(bottle.id);
        expect(result.bottle.name).toBe("Test Bottle");
        expect(result.abv).toBe(40);
    });

    it("errors on invalid release", async function () {
        const caller = createCaller();

        const err = await waitError(caller.bottleReleaseById(1234));
        expect(err).toMatchInlineSnapshot(`[TRPCError: Release not found.]`);
    });
}); 