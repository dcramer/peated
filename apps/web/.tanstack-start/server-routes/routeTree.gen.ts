/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import type {
  CreateServerFileRoute,
  FileRoutesByPath,
} from "@tanstack/react-start/server";
import {
  createServerFileRoute,
  createServerRoute,
} from "@tanstack/react-start/server";

import { ServerRoute as HealthRouteImport } from "./../../src/routes/_health";

// Create/Update Routes

const rootRoute = createServerRoute();

const HealthRoute = HealthRouteImport.update({
  id: "/_health",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-start/server" {
  interface FileRoutesByPath {
    "/_health": {
      id: "/_health";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof HealthRouteImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module "./../../src/routes/_health" {
  const createServerFileRoute: CreateServerFileRoute<
    FileRoutesByPath["/_health"]["parentRoute"],
    FileRoutesByPath["/_health"]["id"],
    FileRoutesByPath["/_health"]["path"],
    FileRoutesByPath["/_health"]["fullPath"],
    unknown
  >;
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "": typeof HealthRoute;
}

export interface FileRoutesByTo {
  "": typeof HealthRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_health": typeof HealthRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "";
  fileRoutesByTo: FileRoutesByTo;
  to: "";
  id: "__root__" | "/_health";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  HealthRoute: typeof HealthRoute;
}

const rootRouteChildren: RootRouteChildren = {
  HealthRoute: HealthRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_health"
      ]
    },
    "/_health": {
      "filePath": "_health.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
